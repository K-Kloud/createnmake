import { Share2 } from "lucide-react";
import { Button } from "@/components/ui/button";
import { useToast } from "@/components/ui/use-toast";

interface ImageHeaderProps {
  creator: {
    name: string;
    avatar: string;
  };
  timeAgo: string;
  imageUrl?: string;
}

export const ImageHeader = ({ creator, timeAgo, imageUrl }: ImageHeaderProps) => {
  const { toast } = useToast();

  const handleShare = async () => {
    if (!imageUrl) {
      toast({
        title: "Error",
        description: "No image available to share",
        variant: "destructive",
      });
      return;
    }

    try {
      if (navigator.share) {
        await navigator.share({
          title: 'Check out this generated image!',
          text: `Generated by ${creator.name}`,
          url: imageUrl
        });
        
        toast({
          title: "Success",
          description: "Image shared successfully",
        });
      } else {
        // Fallback to copying URL
        await navigator.clipboard.writeText(imageUrl);
        toast({
          title: "Success",
          description: "Image URL copied to clipboard",
        });
      }
    } catch (error) {
      console.error('Share error:', error);
      if ((error as Error).name !== 'AbortError') {
        toast({
          title: "Error",
          description: "Failed to share image. URL copied to clipboard instead.",
          variant: "destructive",
        });
        // Attempt to copy URL as fallback
        try {
          await navigator.clipboard.writeText(imageUrl);
        } catch (clipboardError) {
          console.error('Clipboard error:', clipboardError);
        }
      }
    }
  };

  return (
    <div className="flex items-center justify-between mb-2">
      <div className="flex items-center space-x-2">
        <img
          src={creator.avatar}
          alt={creator.name}
          className="w-6 h-6 rounded-full"
        />
        <span className="text-sm font-medium">{creator.name}</span>
        <span className="text-sm text-gray-400">{timeAgo}</span>
      </div>
      <Button 
        variant="ghost" 
        size="sm" 
        className="p-1"
        onClick={handleShare}
      >
        <Share2 className="h-4 w-4" />
      </Button>
    </div>
  );
};