apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: opentech-webapp-ingress
  namespace: opentech-webapp
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://igkiffajkpfwdfxwokwg.supabase.co; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://igkiffajkpfwdfxwokwg.supabase.co wss://igkiffajkpfwdfxwokwg.supabase.co; frame-ancestors 'none';" always;
spec:
  tls:
  - hosts:
    - opentech.example.com
    secretName: opentech-webapp-tls
  rules:
  - host: opentech.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: opentech-webapp-service
            port:
              number: 80